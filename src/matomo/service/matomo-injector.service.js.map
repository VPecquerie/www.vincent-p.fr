{"version":3,"file":"matomo-injector.service.js","sourceRoot":"","sources":["matomo-injector.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,sCAAgE;AAChE,0CAAoD;AAQpD;;;;GAIG;AAEH;IACI;;;;OAIG;IACH,wBAAyC,UAAkB;QAAlB,eAAU,GAAV,UAAU,CAAQ;QACvD,EAAE,CAAC,CAAC,0BAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;QAC/D,CAAC;IACL,CAAC;IAED;;;;;;OAMG;IACH,6BAAI,GAAJ,UAAK,GAAW,EAAE,EAAU;QACxB,EAAE,CAAC,CAAC,0BAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACzC,CAAC;gBACG,IAAM,CAAC,GAAG,GAAG,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;gBACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC/C,IAAM,CAAC,GAAG,QAAQ,EACd,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAC7B,CAAC,GAAG,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;gBAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;gBACf,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;gBACf,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC;gBACvB,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,EAAE,CAAC;QACT,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;QAC/D,CAAC;IACL,CAAC;IAzCQ,cAAc;QAD1B,iBAAU,EAAE;QAOI,WAAA,aAAM,CAAC,kBAAW,CAAC,CAAA;yCAAqB,MAAM;OANlD,cAAc,CA0C1B;IAAD,qBAAC;CAAA,AA1CD,IA0CC;AA1CY,wCAAc","sourcesContent":["import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\ndeclare var window: {\n    [key: string]: any;\n    prototype: Window;\n    new(): Window;\n};\n\n/**\n * Service for injecting the Matomo tracker in the application.\n *\n * @export\n */\n@Injectable()\nexport class MatomoInjector {\n    /**\n     * Creates an instance of MatomoInjector.\n     *\n     * @memberof MatomoInjector\n     */\n    constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n        if (isPlatformBrowser(platformId)) {\n            window._paq = window._paq || [];\n        } else {\n            console.log('Matomo couldn\\'t be use on server platform.');\n        }\n    }\n\n    /**\n     * Injects the Matomo tracker in the DOM.\n     *\n     * @param url: URL of the Matomo instance to connect to.\n     * @param id : SiteId for this application/site.\n     * @memberof MatomoInjector\n     */\n    init(url: string, id: number) {\n        if (isPlatformBrowser(this.platformId)) {\n            window._paq.push(['trackPageView']);\n            window._paq.push(['enableLinkTracking']);\n            (() => {\n                const u = url;\n                window._paq.push(['setTrackerUrl', u + 'piwik.php']);\n                window._paq.push(['setSiteId', id.toString()]);\n                const d = document,\n                    g = d.createElement('script'),\n                    s = d.getElementsByTagName('script')[0];\n                g.type = 'text/javascript';\n                g.async = true;\n                g.defer = true;\n                g.src = u + 'piwik.js';\n                s.parentNode.insertBefore(g, s);\n            })();\n        } else {\n            console.log('Matomo couldn\\'t be use on server platform.');\n        }\n    }\n}\n"]}