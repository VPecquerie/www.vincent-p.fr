services:
    - docker:dind

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - node_modules/

stages:
    - prepare
    - test
    - build

prepare:
    image: trion/ng-cli-karma:latest
    stage: prepare
    script:
        - npm install --production=false

lint:
    image: trion/ng-cli-karma:latest
    stage: test
    dependencies:
        - prepare
    before_script:
        - npm install -g dockerlint
    script:
        - npm install --production=false
        - npm run lint
        - dockerlint Dockerfile

test:
    image: trion/ng-cli-karma:latest
    stage: test
    dependencies:
        - prepare
    script:
        - npm install --production=false
        - npm run test
    artifacts:
        paths:
            - coverage

sonarqube:
    image: registry.gitlab.com/vincent-p/docker-sonar-runner
    stage: test
    dependencies:
        - prepare
    variables:
        SONAR_URL: https://sonarqube.we-program-it.com
        SONAR_GITLAB_PROJECT_ID: 9193568
        SONAR_ANALYSIS_MODE: publish
    script:
        - npm install --production=false
        - gitlab-sonar-scanner -Dsonar.login=${SONARQUBE_TOKEN}

build-master:
    image: docker:dind
    stage: build
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    script:
        - docker build --pull -t "$CI_REGISTRY_IMAGE" .
        - docker push "$CI_REGISTRY_IMAGE"
    only:
        - master

build:
    image: docker:dind
    stage: build
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    script:
        - docker build --build-arg ANGULAR_CONFIGURATION=beta --pull -t "$CI_REGISTRY_IMAGE:beta" .
        - docker push "$CI_REGISTRY_IMAGE:beta"
    except:
        - master
